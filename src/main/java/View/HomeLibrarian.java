package View;

import DAO.AwaitingApprovalDAO;
import DAO.BooksDAO;
import DAO.CallCardDAO;
import DAO.ReturnBookDAO;
import DAO.UserDAO;
import Entity.AwaitingApproval;
import Entity.Book;
import Entity.CallCard;
import Entity.ReturnBook;
import Entity.User;
import Form.FilterForm;
import java.time.LocalDate;
import java.util.List;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Nguyen Dai Phat
 */
public class HomeLibrarian extends javax.swing.JFrame {

    /**
     * Creates new form HomeBorrower
     */
    List<Book> listBook;
    List<User> listUser;
    BooksDAO booksDAO;
    UserDAO userDAO;
    AwaitingApprovalDAO awaitingApprovalDAO;
    FilterForm filterBook;
    FilterForm filterUser;
    FilterForm filterAwait;
    CallCardDAO callCardDAO;
    List<AwaitingApproval> listAwait;
    List<CallCard> listCallCard;
    FilterForm filterCallCard;
    ReturnBookDAO returnBookDAO;

    private User user;

    public HomeLibrarian(User user) {
        this.user = user;
        initComponents();
        booksDAO = new BooksDAO();
        userDAO = new UserDAO();
        callCardDAO = new CallCardDAO();
        filterBook = new FilterForm();
        filterUser = new FilterForm();
        filterAwait = new FilterForm();
        filterCallCard = new FilterForm();
        awaitingApprovalDAO = new AwaitingApprovalDAO();
        returnBookDAO = new ReturnBookDAO();
        resetTableBooks(filterBook);
        resetTableUsers(filterUser);
        resetTableAwait();
        resetTableCallCard();
        
    }

    public HomeLibrarian() {

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        logout = new javax.swing.JButton();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel3 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        typeSearch = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        inputSearch = new javax.swing.JTextPane();
        buttonSearch = new javax.swing.JButton();
        typeSubjectFilter = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tableListBook = new javax.swing.JTable();
        editBook = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        createBook = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        jTabbedPane3 = new javax.swing.JTabbedPane();
        jPanel9 = new javax.swing.JPanel();
        jPanel6 = new javax.swing.JPanel();
        jScrollPane7 = new javax.swing.JScrollPane();
        tableCallCard = new javax.swing.JTable();
        inputCallCardSearch = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        isReturnBook = new javax.swing.JComboBox<>();
        statusReturnBook = new javax.swing.JComboBox<>();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jPanel10 = new javax.swing.JPanel();
        jPanel11 = new javax.swing.JPanel();
        jScrollPane6 = new javax.swing.JScrollPane();
        tableAwait = new javax.swing.JTable();
        jLabel5 = new javax.swing.JLabel();
        typeSearchAwait = new javax.swing.JComboBox<>();
        inputSearchAwait = new javax.swing.JTextField();
        buttonSearchAwait = new javax.swing.JButton();
        confirmAwait = new javax.swing.JButton();
        deleteAwait = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jPanel8 = new javax.swing.JPanel();
        jScrollPane5 = new javax.swing.JScrollPane();
        tableUser = new javax.swing.JTable();
        jLabel4 = new javax.swing.JLabel();
        typeSearchUser = new javax.swing.JComboBox<>();
        inputSearchUser = new javax.swing.JTextField();
        createUser = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        editUser = new javax.swing.JButton();
        deleteUser = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(102, 102, 102));

        logout.setBackground(new java.awt.Color(153, 153, 153));
        logout.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        logout.setText("Đăng xuất");
        logout.setToolTipText("");
        logout.setDisplayedMnemonicIndex(0);
        logout.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                logoutMouseClicked(evt);
            }
        });
        logout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                logoutActionPerformed(evt);
            }
        });

        jTabbedPane1.setBackground(new java.awt.Color(153, 153, 153));
        jTabbedPane1.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jTabbedPane1.setToolTipText("");
        jTabbedPane1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jTabbedPane1.setFocusTraversalPolicyProvider(true);
        jTabbedPane1.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jTabbedPane1.setPreferredSize(new java.awt.Dimension(1268, 600));

        jPanel2.setBackground(new java.awt.Color(228, 228, 228));

        jLabel2.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel2.setText("Tìm kiếm theo");

        typeSearch.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        typeSearch.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Tất cả", "Tên Sách", "Tên Tác Giả" }));
        typeSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                typeSearchActionPerformed(evt);
            }
        });

        inputSearch.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        inputSearch.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jScrollPane1.setViewportView(inputSearch);

        buttonSearch.setBackground(new java.awt.Color(153, 153, 153));
        buttonSearch.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        buttonSearch.setText("Tìm kiếm");
        buttonSearch.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                buttonSearchMouseClicked(evt);
            }
        });
        buttonSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonSearchActionPerformed(evt);
            }
        });

        typeSubjectFilter.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        typeSubjectFilter.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Tất cả", "Sách kỹ năng", "Sách truyện", "Tài liệu", "Sách Chính trị - pháp luật", "Sách Khoa học công nghệ – Kinh tế", "Sách Văn học nghệ thuật", "Sách Văn hóa xã hội – Lịch sử", "Sách Giáo trình", "Sách Truyện, tiểu thuyết", "Sách Tâm lý, tâm linh, tôn giáo", "Sách thiếu nhi" }));

        jLabel3.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel3.setText("Thể loại");

        tableListBook.setBackground(new java.awt.Color(204, 204, 204));
        tableListBook.setFont(new java.awt.Font("Times New Roman", 0, 15)); // NOI18N
        tableListBook.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Mã sách", "Tên sách", "Nhà xuất bản", "Năm xuất bản", "Tác giả", "Thể loại", "Giá tiền", "Số sách được mượn", "Số sách còn lại"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tableListBook.setToolTipText("");
        tableListBook.setIntercellSpacing(new java.awt.Dimension(5, 5));
        tableListBook.setRowHeight(30);
        tableListBook.setShowGrid(true);
        jScrollPane2.setViewportView(tableListBook);

        editBook.setBackground(new java.awt.Color(153, 153, 153));
        editBook.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        editBook.setText("Cập nhật");
        editBook.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                editBookMouseClicked(evt);
            }
        });
        editBook.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editBookActionPerformed(evt);
            }
        });

        jButton2.setBackground(new java.awt.Color(153, 153, 153));
        jButton2.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jButton2.setText("Xóa");
        jButton2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton2MouseClicked(evt);
            }
        });
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        createBook.setBackground(new java.awt.Color(153, 153, 153));
        createBook.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        createBook.setText("Thêm");
        createBook.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                createBookMouseClicked(evt);
            }
        });
        createBook.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                createBookActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(typeSubjectFilter, 0, 1, Short.MAX_VALUE)
                    .addComponent(typeSearch, 0, 122, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(buttonSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(createBook, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(editBook, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1))
                .addContainerGap(424, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(typeSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(typeSubjectFilter, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(buttonSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(createBook, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(editBook, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 497, Short.MAX_VALUE)
                .addGap(32, 32, 32))
        );

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jTabbedPane1.addTab("Quản lý sách", jPanel3);

        jTabbedPane3.setBackground(new java.awt.Color(255, 255, 255));
        jTabbedPane3.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jTabbedPane3.setOpaque(true);

        jPanel6.setBackground(new java.awt.Color(228, 228, 228));

        tableCallCard.setBackground(new java.awt.Color(204, 204, 204));
        tableCallCard.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        tableCallCard.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Mã Mượn Sách", "Thẻ Thư Viện", "Người Mượn", "Mã Sách", "Tên Sách", "Ngày Mượn", "Số Ngày Mượn", "Ngày Trả", "Tình Trạng Sách", "Tiền Phạt", "Ghi Chú"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tableCallCard.setIntercellSpacing(new java.awt.Dimension(5, 5));
        tableCallCard.setRowHeight(30);
        jScrollPane7.setViewportView(tableCallCard);

        inputCallCardSearch.setFont(new java.awt.Font("Times New Roman", 0, 15)); // NOI18N

        jButton1.setBackground(new java.awt.Color(153, 153, 153));
        jButton1.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jButton1.setText("Tìm kiếm");
        jButton1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton1MouseClicked(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel6.setText("Tình trạng sách");

        isReturnBook.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        isReturnBook.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Tất cả", "Chưa trả", "Đã trả" }));
        isReturnBook.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                isReturnBookItemStateChanged(evt);
            }
        });
        isReturnBook.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                isReturnBookPropertyChange(evt);
            }
        });

        statusReturnBook.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Tất cả", "Bình thường", "Hư hỏng", "Làm mất" }));
        statusReturnBook.setEnabled(false);

        jButton4.setBackground(new java.awt.Color(153, 153, 153));
        jButton4.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jButton4.setText("Tạo Phiếu Mượn");
        jButton4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton4MouseClicked(evt);
            }
        });
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton5.setBackground(new java.awt.Color(153, 153, 153));
        jButton5.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jButton5.setText("Trả sách");
        jButton5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton5MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addComponent(jScrollPane7, javax.swing.GroupLayout.DEFAULT_SIZE, 1064, Short.MAX_VALUE)
                        .addGap(14, 14, 14))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel6Layout.createSequentialGroup()
                                .addComponent(inputCallCardSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton1))
                            .addGroup(jPanel6Layout.createSequentialGroup()
                                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(isReturnBook, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(statusReturnBook, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jButton4)
                            .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(inputCallCardSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(isReturnBook, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(statusReturnBook, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane7, javax.swing.GroupLayout.DEFAULT_SIZE, 486, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jTabbedPane3.addTab("Phiếu mượn", jPanel9);

        jPanel11.setBackground(new java.awt.Color(228, 228, 228));

        tableAwait.setBackground(new java.awt.Color(204, 204, 204));
        tableAwait.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        tableAwait.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Người Mượn", "Thẻ Thư Viện", "Mã Sách", "Tên Sách", "Nhà Xuất Bản", "Năm Xuất Bản", "Tác Giả", "Giá Tiền", "Số ngày mượn"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tableAwait.setIntercellSpacing(new java.awt.Dimension(5, 5));
        tableAwait.setRowHeight(30);
        jScrollPane6.setViewportView(tableAwait);

        jLabel5.setFont(new java.awt.Font("Segoe UI", 0, 15)); // NOI18N
        jLabel5.setText("Tìm kiếm theo");

        typeSearchAwait.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Tên Độc Giả", "Thẻ Thư Viện" }));

        buttonSearchAwait.setBackground(new java.awt.Color(153, 153, 153));
        buttonSearchAwait.setFont(new java.awt.Font("Segoe UI", 1, 15)); // NOI18N
        buttonSearchAwait.setText("Tìm kiếm");
        buttonSearchAwait.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                buttonSearchAwaitMouseClicked(evt);
            }
        });

        confirmAwait.setBackground(new java.awt.Color(153, 153, 153));
        confirmAwait.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        confirmAwait.setText("Duyệt");
        confirmAwait.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                confirmAwaitMouseClicked(evt);
            }
        });

        deleteAwait.setBackground(new java.awt.Color(153, 153, 153));
        deleteAwait.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        deleteAwait.setText("Xóa");
        deleteAwait.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                deleteAwaitMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel11Layout = new javax.swing.GroupLayout(jPanel11);
        jPanel11.setLayout(jPanel11Layout);
        jPanel11Layout.setHorizontalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane6, javax.swing.GroupLayout.DEFAULT_SIZE, 1072, Short.MAX_VALUE)
                    .addGroup(jPanel11Layout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(typeSearchAwait, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(inputSearchAwait, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(buttonSearchAwait, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(confirmAwait, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(deleteAwait, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel11Layout.setVerticalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel11Layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(typeSearchAwait, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(inputSearchAwait, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(confirmAwait, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(deleteAwait, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(buttonSearchAwait, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane6, javax.swing.GroupLayout.DEFAULT_SIZE, 495, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel10Layout.setVerticalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jTabbedPane3.addTab("Danh sách chờ mượn", jPanel10);

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane3)
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane3)
        );

        jTabbedPane1.addTab("Quản lý phiếu mượn", jPanel5);

        jPanel8.setBackground(new java.awt.Color(228, 228, 228));

        tableUser.setAutoCreateRowSorter(true);
        tableUser.setBackground(new java.awt.Color(204, 204, 204));
        tableUser.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        tableUser.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Thẻ thư viện", "Họ và tên", "Giới tính", "Quê quán", "Ngày sinh", "Số điện thoại", "Số sách đang mượn", "Số sách đã mượn"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Object.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tableUser.setIntercellSpacing(new java.awt.Dimension(5, 5));
        tableUser.setRowHeight(30);
        tableUser.setShowGrid(true);
        jScrollPane5.setViewportView(tableUser);

        jLabel4.setFont(new java.awt.Font("Times New Roman", 0, 15)); // NOI18N
        jLabel4.setText("Tìm kiếm theo");

        typeSearchUser.setFont(new java.awt.Font("Times New Roman", 0, 15)); // NOI18N
        typeSearchUser.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Họ và tên", "Thẻ thư viện" }));

        createUser.setBackground(new java.awt.Color(153, 153, 153));
        createUser.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        createUser.setText("Tạo tài khoản");
        createUser.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                createUserMouseClicked(evt);
            }
        });

        jButton3.setBackground(new java.awt.Color(153, 153, 153));
        jButton3.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jButton3.setText("Tìm kiếm");
        jButton3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton3MouseClicked(evt);
            }
        });

        editUser.setBackground(new java.awt.Color(153, 153, 153));
        editUser.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        editUser.setText("Sửa");
        editUser.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                editUserMouseClicked(evt);
            }
        });

        deleteUser.setBackground(new java.awt.Color(153, 153, 153));
        deleteUser.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        deleteUser.setText("Xóa");
        deleteUser.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                deleteUserMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(typeSearchUser, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(inputSearchUser, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(createUser)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(editUser)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(deleteUser)
                .addContainerGap(155, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane5))
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel8Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(typeSearchUser, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(inputSearchUser, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(createUser, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(editUser, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(deleteUser, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.DEFAULT_SIZE, 537, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jTabbedPane1.addTab("Quản lý độc giả", jPanel4);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(logout)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jTabbedPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 1088, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(logout, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 651, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void logoutMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_logoutMouseClicked
        Login login = new Login();
        login.setVisible(true);
        login.setLocationRelativeTo(null);
        this.dispose();
    }//GEN-LAST:event_logoutMouseClicked

    private void logoutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_logoutActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_logoutActionPerformed

    private void buttonSearchMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_buttonSearchMouseClicked
        // TODO add your handling code here:
        if (!typeSubjectFilter.getSelectedItem().equals("Tất cả")) {
            filterBook.setTypeFilter("subject");
            filterBook.setFilter(typeSubjectFilter.getSelectedItem().toString());
        }
        if (typeSubjectFilter.getSelectedItem().equals("Tất cả")) {
            filterBook.setTypeFilter("");
            filterBook.setFilter("");
        }
        switch (typeSearch.getSelectedItem().toString()) {
            case "Tất cả":
                filterBook.setTypeSearch("`name` LIKE '%" + inputSearch.getText() + "%' OR `author`");
                filterBook.setSearch(inputSearch.getText());
                break;
            case "Tên Sách":
                filterBook.setTypeSearch("name");
                filterBook.setSearch(inputSearch.getText());
                break;
            case "Tên Tác Giả":
                filterBook.setTypeSearch("author");
                filterBook.setSearch(inputSearch.getText());
                break;
            default:
                break;
        }
        resetTableBooks(filterBook);

    }//GEN-LAST:event_buttonSearchMouseClicked

    private void typeSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_typeSearchActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_typeSearchActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton3MouseClicked
        // TODO add your handling code here:

        switch (typeSearchUser.getSelectedItem().toString()) {
            case "Họ và tên":
                filterUser.setTypeSearch("fullname");
                filterUser.setSearch(inputSearchUser.getText());
                break;
            case "Thẻ thư viện":
                filterUser.setTypeSearch("libraryCard");
                filterUser.setSearch(inputSearchUser.getText());
                break;
            default:
                break;
        }
        resetTableUsers(filterUser);
    }//GEN-LAST:event_jButton3MouseClicked

    private void jButton2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton2MouseClicked
        // TODO add your handling code here:
        if (tableListBook.getSelectedRow() == -1) {
            JOptionPane.showMessageDialog(null, "Vui lòng chọn sách để xóa ! ", "Lỗi", JOptionPane.ERROR_MESSAGE);
        } else {
            String bookId = tableListBook.getModel().getValueAt(tableListBook.getSelectedRow(), 0).toString();
            String bookName = tableListBook.getModel().getValueAt(tableListBook.getSelectedRow(), 1).toString();
            if (JOptionPane.showConfirmDialog(this, "Bạn có chắc chắn muốn xóa sách " + bookName, "Xóa sách", JOptionPane.YES_NO_OPTION) == JOptionPane.YES_OPTION) {
                booksDAO.delete(bookId);
                resetTableBooks(filterBook);
            }
        }
    }//GEN-LAST:event_jButton2MouseClicked

    private void createBookMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_createBookMouseClicked
        // TODO add your handling code here:
        CreateBook createBook = new CreateBook(this);
        createBook.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
        createBook.setVisible(true);
        createBook.setLocationRelativeTo(null);

    }//GEN-LAST:event_createBookMouseClicked

    private void editBookMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_editBookMouseClicked
        // TODO add your handling code here:
        if (tableListBook.getSelectedRow() == -1) {
            JOptionPane.showMessageDialog(null, "Vui lòng chọn sách để cập nhật !", "Lỗi", JOptionPane.ERROR_MESSAGE);
        } else {
            String bookId = tableListBook.getModel().getValueAt(tableListBook.getSelectedRow(), 0).toString();
            Book book = booksDAO.findByBookId(bookId);
            EditBook editBook = new EditBook(book, this);
            editBook.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
            editBook.setVisible(true);
            editBook.setLocationRelativeTo(null);
        }
    }//GEN-LAST:event_editBookMouseClicked

    private void buttonSearchAwaitMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_buttonSearchAwaitMouseClicked
        // TODO add your handling code here:
        if (!inputSearchAwait.getText().equals("")) {
            filterAwait.setTypeSearch(typeSearchAwait.getSelectedItem().toString());
            filterAwait.setSearch(inputSearchAwait.getText());
        }
//        else resetTableAwait();
        resetTableAwait();
    }//GEN-LAST:event_buttonSearchAwaitMouseClicked

    private void deleteAwaitMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_deleteAwaitMouseClicked
        // TODO add your handling code here:
        if (tableAwait.getSelectedRow() == -1) {
            JOptionPane.showMessageDialog(null, "Vui lòng chọn yêu cầu để xóa ! ", "Lỗi", JOptionPane.ERROR_MESSAGE);
        } else {
            int[] rows = tableAwait.getSelectedRows();
            for (int i : rows) {
                String awaitId = tableAwait.getModel().getValueAt(i, 0).toString();
                awaitingApprovalDAO.deleteById(awaitId);
            }
            resetTableAwait();
        }
    }//GEN-LAST:event_deleteAwaitMouseClicked

    private void confirmAwaitMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_confirmAwaitMouseClicked
        // TODO add your handling code here:
         if (tableAwait.getSelectedRow() == -1) {
            JOptionPane.showMessageDialog(null, "Vui lòng chọn yêu cầu để duyệt ! ", "Lỗi", JOptionPane.ERROR_MESSAGE);
        } else {
            int[] rows = tableAwait.getSelectedRows();
            for (int i : rows) {
                User user = userDAO.findByLibraryCard(tableAwait.getModel().getValueAt(i,2).toString());
                Book book = booksDAO.findByBookId(tableAwait.getModel().getValueAt(i,3).toString());
                int numberOfBook = book.getTotalQuantity()-callCardDAO.numberOfBorrowingBooksByBookId(book.getBookId());
                if(numberOfBook > 0){
                    CallCard callCard = new CallCard();
                callCard.setUser(user);
                callCard.setBook(book);
                callCard.setBorrowedDay(Integer.parseInt(tableAwait.getModel().getValueAt(i,9).toString()));
                callCard.setBorrowedDate(LocalDate.now());
                callCardDAO.save(callCard);
                for(int j:rows){
                    String awaitId = tableAwait.getModel().getValueAt(j, 0).toString();
                    awaitingApprovalDAO.deleteById(awaitId);
                }
                resetTableAwait();
                resetTableCallCard();
                }
                else JOptionPane.showMessageDialog(null, "Hết sách! ", "Lỗi", JOptionPane.ERROR_MESSAGE);

            }
            
        }
    }//GEN-LAST:event_confirmAwaitMouseClicked

    private void isReturnBookPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_isReturnBookPropertyChange

    }//GEN-LAST:event_isReturnBookPropertyChange

    private void isReturnBookItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_isReturnBookItemStateChanged
        // TODO add your handling code here:

        if(isReturnBook.getSelectedItem().toString().equals("Chưa trả")||isReturnBook.getSelectedItem().toString().equals("Tất cả")){
            statusReturnBook.setEnabled(false);
            statusReturnBook.setSelectedIndex(0);
        }
        else{
            statusReturnBook.setEnabled(true);
        }
    }//GEN-LAST:event_isReturnBookItemStateChanged

    private void jButton1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton1MouseClicked
        // TODO add your handling code here:
        filterCallCard.setSearch(inputCallCardSearch.getText());
        filterCallCard.setTypeFilter(isReturnBook.getSelectedItem().toString());
        filterCallCard.setFilter(statusReturnBook.getSelectedItem().toString());
        
        resetTableCallCard();
    }//GEN-LAST:event_jButton1MouseClicked

    private void createUserMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_createUserMouseClicked
        // TODO add your handling code here:
        CreateUser createUser = new CreateUser(this);
        createUser.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
        createUser.setVisible(true);
        createUser.setLocationRelativeTo(null);
    }//GEN-LAST:event_createUserMouseClicked

    private void editUserMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_editUserMouseClicked
        // TODO add your handling code here:
         if (tableUser.getSelectedRow() == -1) {
            JOptionPane.showMessageDialog(null, "Vui lòng chọn độc giả để sửa thông tin ! ", "Lỗi", JOptionPane.ERROR_MESSAGE);
        } else {
        User user = userDAO.findByLibraryCard(tableUser.getModel().getValueAt(tableUser.getSelectedRow(),0).toString());
        UpdateInforUser updateInforUser = new UpdateInforUser(user,this);
            updateInforUser.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
            updateInforUser.setVisible(true);
            updateInforUser.setLocationRelativeTo(null);
        }
    }//GEN-LAST:event_editUserMouseClicked

    private void deleteUserMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_deleteUserMouseClicked
        // TODO add your handling code here:
         if (tableUser.getSelectedRow() == -1) {
            JOptionPane.showMessageDialog(null, "Vui lòng chọn độc giả để xóa ! ", "Lỗi", JOptionPane.ERROR_MESSAGE);
        } else {
        String libraryCard = tableUser.getModel().getValueAt(tableUser.getSelectedRow(),0).toString();
        String name = tableUser.getModel().getValueAt(tableUser.getSelectedRow(),1).toString();
       
        if (JOptionPane.showConfirmDialog(this, "Bạn có chắc chắn muốn xóa độc giả " + name, "Xóa độc giả", JOptionPane.YES_NO_OPTION) == JOptionPane.YES_OPTION) {
               userDAO.deleteByLibraryCard(libraryCard);
                resetTableUsers(filterBook);
            }
        
        }
    }//GEN-LAST:event_deleteUserMouseClicked

    private void jButton5MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton5MouseClicked
        // TODO add your handling code here:
        if (tableCallCard.getSelectedRow() == -1) {
            JOptionPane.showMessageDialog(null, "Vui lòng chọn phiếu mượn để trả sách ! ", "Lỗi", JOptionPane.ERROR_MESSAGE);
        } else {
        
            if(!tableCallCard.getModel().getValueAt(tableCallCard.getSelectedRow(),7).toString().equals("Chưa trả")){
                JOptionPane.showMessageDialog(null, "Phiếu mượn này đã được trả ! ", "Lỗi", JOptionPane.ERROR_MESSAGE);
            }
            else{
              String callCardId = tableCallCard.getModel().getValueAt(tableCallCard.getSelectedRow(),0).toString();
              CallCard callCard = callCardDAO.findByCallCardId(callCardId);

              ReturnBookView returnBookView = new ReturnBookView(callCard,this);
              returnBookView.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
              returnBookView.setVisible(true);
              returnBookView.setLocationRelativeTo(null);
            }
        }
    }//GEN-LAST:event_jButton5MouseClicked

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton4MouseClicked
        // TODO add your handling code here:
        CreateCallCard createCallCard = new CreateCallCard(this);
        createCallCard.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
        createCallCard.setVisible(true);
        createCallCard.setLocationRelativeTo(null);
    }//GEN-LAST:event_jButton4MouseClicked

    private void buttonSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonSearchActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_buttonSearchActionPerformed

    private void createBookActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_createBookActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_createBookActionPerformed

    private void editBookActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editBookActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_editBookActionPerformed

    public void resetTableBooks(FilterForm filterForm) {
        listBook = booksDAO.findAll(filterForm);
        DefaultTableModel tbBooks = (DefaultTableModel) tableListBook.getModel();
        tbBooks.setRowCount(0);
        for (Book book : listBook) {
            int numberOfBook = book.getTotalQuantity()-callCardDAO.numberOfBorrowingBooksByBookId(book.getBookId());
            tbBooks.addRow(new Object[]{book.getBookId(), book.getName(), book.getPublisher(), book.getYearOfPublisher(), book.getAuthor(), book.getSubject()
                    ,book.getPrice(),callCardDAO.numberOfBorrowingBooksByBookId(book.getBookId()),numberOfBook});
        }
    }

    public void resetTableUsers(FilterForm filterForm) {
        listUser = userDAO.findAll(filterForm);
        DefaultTableModel tableUser = (DefaultTableModel) this.tableUser.getModel();
        tableUser.setRowCount(0);
        for (User user : listUser) {
            int numberOfBooksBorrowed = callCardDAO.findByLibraryCard(user.getLibraryCard()).size();
            int numberOfBooksBorrowing=callCardDAO.numberOfBorrowingBooksByUser(user.getLibraryCard());
            tableUser.addRow(new Object[]{user.getLibraryCard(), user.getFullname(), user.getGender(), user.getAddress(), user.getDateOfBirth().toString(), user.getNumberPhone(),numberOfBooksBorrowing,numberOfBooksBorrowed});
        }
    }

    public void resetTableAwait() {
        listAwait = awaitingApprovalDAO.findAll(filterAwait);
        DefaultTableModel tableAwait = (DefaultTableModel) this.tableAwait.getModel();
        tableAwait.setRowCount(0);
        for (AwaitingApproval await : listAwait) {
            tableAwait.addRow(new Object[]{await.getId(), await.getUser().getFullname(), await.getUser().getLibraryCard(), await.getBook().getBookId(),
                 await.getBook().getName(), await.getBook().getPublisher(), await.getBook().getYearOfPublisher(), await.getBook().getAuthor(),
                await.getBook().getPrice(), await.getBorrowedDay()});
        }
    }
    
    public void resetTableCallCard(){
        listCallCard = callCardDAO.findAll(filterCallCard);
        DefaultTableModel tableCallCard = (DefaultTableModel) this.tableCallCard.getModel();
        tableCallCard.setRowCount(0);
        for (CallCard callCard : listCallCard) {
            ReturnBook returnBook = returnBookDAO.findByCallCardId(callCard.getCallCardId());
            if(returnBook.getReturnBookId()==null){
                tableCallCard.addRow(new Object[]{callCard.getCallCardId(),callCard.getUser().getLibraryCard(),callCard.getUser().getFullname(),
                callCard.getBook().getBookId(),callCard.getBook().getName(),callCard.getBorrowedDate(),callCard.getBorrowedDay(),"Chưa trả"});
            }
            else{
                tableCallCard.addRow(new Object[]{callCard.getCallCardId(),callCard.getUser().getLibraryCard(),callCard.getUser().getFullname(),
                callCard.getBook().getBookId(),callCard.getBook().getName(),callCard.getBorrowedDate(),callCard.getBorrowedDay(),returnBook.getPayDay(),
                returnBook.getStatus(),returnBook.getFines(),returnBook.getNote()});
            }
            
            
        }
        resetTableBooks(filterBook);
        resetTableUsers(filterUser);
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(HomeLibrarian.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(HomeLibrarian.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(HomeLibrarian.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(HomeLibrarian.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new HomeLibrarian().setVisible(true);
            }
        });
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton buttonSearch;
    private javax.swing.JButton buttonSearchAwait;
    private javax.swing.JButton confirmAwait;
    private javax.swing.JButton createBook;
    private javax.swing.JButton createUser;
    private javax.swing.JButton deleteAwait;
    private javax.swing.JButton deleteUser;
    private javax.swing.JButton editBook;
    private javax.swing.JButton editUser;
    private javax.swing.JTextField inputCallCardSearch;
    private javax.swing.JTextPane inputSearch;
    private javax.swing.JTextField inputSearchAwait;
    private javax.swing.JTextField inputSearchUser;
    private javax.swing.JComboBox<String> isReturnBook;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTabbedPane jTabbedPane3;
    private javax.swing.JButton logout;
    private javax.swing.JComboBox<String> statusReturnBook;
    private javax.swing.JTable tableAwait;
    private javax.swing.JTable tableCallCard;
    private javax.swing.JTable tableListBook;
    private javax.swing.JTable tableUser;
    private javax.swing.JComboBox<String> typeSearch;
    private javax.swing.JComboBox<String> typeSearchAwait;
    private javax.swing.JComboBox<String> typeSearchUser;
    private javax.swing.JComboBox<String> typeSubjectFilter;
    // End of variables declaration//GEN-END:variables
}
